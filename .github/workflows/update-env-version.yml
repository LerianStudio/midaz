name: Update Envs Version With TAG Release

on:
  pull_request_target:
    branches:
      - develop
    types:
      - opened
      - edited
      - synchronize
      - reopened

permissions:
  contents: write
  pull-requests: write

jobs:
  update-env-release:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          private-key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY }}
          passphrase: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY_PASSWORD }}
          git_committer_name: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          git_committer_email: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          git_config_global: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Fetch Latest Release
        id: latest_release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          RAW_RELEASE=$(gh release list --repo $GITHUB_REPOSITORY --limit 1 --json tagName --jq '.[0].tagName')
          FORMATTED_RELEASE=$(echo "$RAW_RELEASE" | sed -E 's/-[a-zA-Z0-9.]+//')
          echo "tag=$FORMATTED_RELEASE" >> $GITHUB_OUTPUT

      - name: Fetch Env Release
        id: env_release
        run: |
          VERSION=$(grep '^VERSION=' ./components/ledger/.env.example | cut -d '=' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update Environments
        if: ${{ steps.latest_release.outputs.tag && steps.env_release.outputs.version && steps.latest_release.outputs.tag != steps.env_release.outputs.version }}
        run: |
          sed -i "s/^VERSION=.*/VERSION=${{ steps.latest_release.outputs.tag }}/" ./components/audit/.env.example
          sed -i "s/^VERSION=.*/VERSION=${{ steps.latest_release.outputs.tag }}/" ./components/ledger/.env.example
          sed -i "s/^VERSION=.*/VERSION=${{ steps.latest_release.outputs.tag }}/" ./components/transaction/.env.example
          sed -i "s/^VERSION=.*/VERSION=${{ steps.latest_release.outputs.tag }}/" ./components/mdz/.env.example
          TAG=${{ steps.latest_release.outputs.tag }}
          sed -i "s/\$version *= *'[^']*'/\$version = '$TAG'/g" "./chocolatey/tools/chocolateyinstall.ps1"

      - name: Commit Changes
        if: ${{ steps.latest_release.outputs.tag && steps.env_release.outputs.version && steps.latest_release.outputs.tag != steps.env_release.outputs.version }}
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git add .
          git commit -m "chore(release): update version in .env.example to ${{ steps.latest_release.outputs.tag }}"
          git push origin ${{ github.head_ref }}