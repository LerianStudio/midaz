name: "Go Combined Analysis"

on:
  pull_request:
    branches:
      - develop
      - main
    types:
      - opened
      - edited
      - synchronize
      - reopened

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: read
  security-events: write

jobs:
  CodeQL:
    name: Run CodeQL to Midaz
    runs-on: ubuntu-24.04
    timeout-minutes: 360
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: go
            build-mode: autobuild
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  GolangCI-Lint:
    name: Run GolangCI-Lint to Midaz
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Using GolangCI-Lint Module
      - name: Run GoLangCI Lint
        uses: LerianStudio/github-actions-golangci-lint@main
        with:
          lerian_studio_midaz_push_bot_app_id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          lerian_studio_midaz_push_bot_private_key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}
          lerian_ci_cd_user_gpg_key: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY }}
          lerian_ci_cd_user_gpg_key_password: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY_PASSWORD }}
          lerian_ci_cd_user_name: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          lerian_ci_cd_user_email: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          go_version: '1.23'  # Versão do Go, se necessário alterar
          github_token: ${{ secrets.GITHUB_TOKEN }}
          golangci_lint_version: 'v2.0.2'  # Versão do GolangCI-Lint, se necessário mude para a versão desejada

  GoSec:
    name: Run GoSec to Midaz
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false

      - name: Gosec Scanner
        uses: securego/gosec@master
        with:
          args: ./...

  unit-tests:
    name: Run Unit Tests to Midaz
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: false

      - name: Unit Tests
        shell: bash
        run: make test

#  integration-tests:
#    name: Run Integrations Tests to MDZ
#    runs-on: ubuntu-24.04
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Install Docker Compose
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y docker-compose
#
#      - name: Setup .env files
#        run: make set-env
#
#      - name: Start Docker Compose Services
#        run: make up
#
#      - name: Install CLI
#        run: cd components/mdz && make install-local && cd -
#
#      - name: Wait for services to be ready
#        run: sleep 10
#        timeout-minutes: 2
#
#      - name: Run Integration Tests
#        run: make test_integration_cli
