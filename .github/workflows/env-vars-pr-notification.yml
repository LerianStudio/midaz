name: 'Notify DevOps Team on PR with .env.example file'

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'components/*/.env.example'

jobs:
  notify_devops:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository with full history to compare changes
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Display current branch and recent commit history for debugging
      - name: Check the current branch
        run: |
          echo "Current branch:"
          git branch
          echo "Current commit history:"
          git log --oneline -n 5  # Shows the last 5 commits to verify if the commit is present

      # Check for meaningful changes in .env.example files (ignoring VERSION changes)
      - name: Check for changes in .env.example files
        run: |
          echo "Checking for changes in .env.example..."

          # Dynamically determine the commits to compare
          PREVIOUS_COMMIT=$(git rev-parse HEAD~1)
          CURRENT_COMMIT=$(git rev-parse HEAD)

          # Initialize CHANGED variable
          CHANGED=false

          # Check if .env.example files have changed
          for file in $(git diff --name-only $PREVIOUS_COMMIT $CURRENT_COMMIT | grep -E 'components/(console|infra|mdz|onboarding|transaction)/.*\.env.example'); do
            # Display which file we're checking
            echo "Checking file: $file"

            # Check for changes in the file, excluding lines that start with 'VERSION='
            if git diff --ignore-matching-lines='^VERSION=.*' $PREVIOUS_COMMIT $CURRENT_COMMIT -- "$file" | grep -q .; then
              echo "File $file has changes!"
              CHANGED=true
              break
            else
              echo "No relevant changes in $file"
            fi
          done  # End of for loop to check each file

          # Determine if any files changed (outside the loop)
          if [ "$CHANGED" = true ]; then
            echo "At least one .env.example file has changes!"
            echo "file_changed=true" >> $GITHUB_ENV
          else
            echo "No .env.example files have changes."
            echo "file_changed=false" >> $GITHUB_ENV
          fi

      # Send a Slack notification to alert the team about environment variable changes
      - name: Send Slack Notification if file changed
        if: env.file_changed == 'true'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.RELEASE_WEBHOOK_NOTIFICATION_URL }}
          SLACK_COLOR: "#ff0000"
          SLACK_CHANNEL: "Marvin"
          SLACK_ICON_EMOJI: ":memo:"
          SLACK_TITLE: "New PR with .env.example changes!"
          SLACK_MESSAGE: |
            :bell: **A new PR has changes in the `.env.example` file!** :warning:

            **PR Title:** ${{ github.event.pull_request.title }}
            **PR URL:** ${{ github.event.pull_request.html_url }}

            Please review the changes made to the `.env.example` file.

            @LerianStudio/G_Github_Devops @LerianStudio/G_Github_Dev
