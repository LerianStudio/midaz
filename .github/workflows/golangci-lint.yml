name: "GoLangCI-Lint"

on:
  pull_request:
    branches:
      - develop
      - main
    types:
      - opened
      - edited
      - synchronize
      - reopened

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  GoLangCI-Lint:
    runs-on: ubuntu-latest
    name: Run GoLangCI-Lint to Midaz
    steps:
    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
        private-key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      id: import_gpg
      with:
        gpg_private_key: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY }}
        passphrase: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY_PASSWORD }}
        git_committer_name: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
        git_committer_email: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
        git_config_global: true
        git_user_signingkey: true
        git_commit_gpgsign: true

    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: false

    - name: golangci-lint
      uses: reviewdog/action-golangci-lint@v2
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ steps.app-token.outputs.token }}
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        GIT_AUTHOR_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
        GIT_AUTHOR_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
        GIT_COMMITTER_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
        GIT_COMMITTER_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}

    #- name: GoLangCI-Lint
    #  uses: golangci/golangci-lint-action@v4
    #  with:
    #    version: latest