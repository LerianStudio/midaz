name: "Build midaz images"

on:
  push:
    tags:
      - '**'

permissions:
  id-token: write       # Needed for authentication
  contents: read        # Needed to check out the repository
  pull-requests: write  # Needed to comment on PRs

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-paths.outputs.matrix }}
    name: Detect changed paths
    steps:
      - name: Get changed paths
        id: changed-paths
        uses: LerianStudio/github-actions-changed-paths@main
        with:
          filter_paths: |-
            components/onboarding
            components/transaction
            components/console
          get_app_name: true
          path_level: 2
          app_name_prefix: midaz

  build_and_publish:
    needs: detect_changes
    if: needs.detect_changes.outputs.matrix != '[]'
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect_changes.outputs.matrix) }}
    env:
      DOCKERHUB_ORG: lerianstudio

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_ORG }}/${{ matrix.app.name }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch,suffix=-${{ github.sha }}

      - name: Build and Push Docker image (Multi-Arch)
        uses: docker/build-push-action@v5
        with:
          file: ${{ matrix.app.working_dir }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Extract tag name
        id: extract_tag
        shell: bash
        run: echo "tag=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Write tag to file for GitOps
        if: contains(github.ref, '-beta')
        run: |
          mkdir -p gitops-tags
          echo "${{ matrix.app.name }}=${{ steps.extract_tag.outputs.tag }}" > gitops-tags/${{ matrix.app.name }}=${{ steps.extract_tag.outputs.tag }}

      - name: Upload GitOps tag artifact
        if: contains(github.ref, '-beta')
        uses: actions/upload-artifact@v4
        with:
          name: gitops-tags
          path: gitops-tags/

      - name: Run Trivy vulnerability scanner (fail on release)
        if: "!contains(github.ref, '-beta')"
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.DOCKERHUB_ORG }}/${{ matrix.app.name }}:${{ steps.extract_tag.outputs.tag }}'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      - name: Run Trivy vulnerability scanner (non-blocking on pre-release)
        if: contains(github.ref, '-beta')
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: '${{ env.DOCKERHUB_ORG }}/${{ matrix.app.name }}:${{ steps.extract_tag.outputs.tag }}'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

  update_gitops:
    needs: [build_and_publish]
    if: contains(github.ref, '-beta')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: LerianStudio/midaz-firmino-gitops
          token: ${{ secrets.MANAGE_TOKEN }}
          path: gitops
          fetch-depth: 0

      - name: Download tags from artifacts
        uses: actions/download-artifact@v4
        with:
          name: gitops-tags
          path: .gitops-tags

      - name: Apply image tags to values.yaml
        run: |
          for tagfile in .gitops-tags/*; do
            name=$(basename "$tagfile" | cut -d= -f1)
            tag=$(basename "$tagfile" | cut -d= -f2)
            echo "ðŸ”§ Updating tag for $name to $tag"
            yq e ".$name.image.tag = \"$tag\"" -i gitops/environments/firmino/helmfile/applications/midaz/values.yaml
          done

      - name: Commit and push GitOps update
        run: |
          cd gitops
          git config user.name "${{ secrets.LERIAN_CI_CD_USER_NAME }}"
          git config user.email "${{ secrets.LERIAN_CI_CD_USER_EMAIL }}"
          git commit -am "ci: update image tags"
          git push origin main
