basePath: /
definitions:
  Amount:
    description: Amount structure for marshaling/unmarshalling JSON.
    properties:
      amount:
        example: 1500
        type: number
      scale:
        example: 2
        type: number
    type: object
  Balance:
    description: Balance structure for marshaling/unmarshalling JSON.
    properties:
      available:
        example: 1500
        type: number
      onHold:
        example: 500
        type: number
      scale:
        example: 2
        type: number
    type: object
  Operation:
    description: Operation is a struct designed to encapsulate response payload data.
    properties:
      accountAlias:
        example: '@person1'
        type: string
      accountId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      amount:
        $ref: '#/definitions/Amount'
      assetCode:
        example: BRL
        type: string
      balance:
        $ref: '#/definitions/Balance'
      balanceAfter:
        $ref: '#/definitions/Balance'
      chartOfAccounts:
        example: "1000"
        type: string
      createdAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      deletedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      description:
        example: Credit card operation
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      ledgerId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      metadata:
        additionalProperties: {}
        type: object
      organizationId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      portfolioId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      status:
        $ref: '#/definitions/operation.Status'
      transactionId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      type:
        example: creditCard
        type: string
      updatedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  Pagination:
    description: Pagination is a struct designed to encapsulate pagination response
      payload data.
    properties:
      items: {}
      limit:
        example: 10
        type: integer
      page:
        example: 1
        type: integer
    type: object
  UpdateOperationInput:
    description: UpdateOperationInput is a struct design to encapsulate payload data.
    properties:
      description:
        example: Credit card operation
        maxLength: 256
        type: string
      metadata:
        additionalProperties: {}
        type: object
    type: object
  assetrate.AssetRate:
    properties:
      amount:
        type: number
      baseAssetCode:
        type: string
      counterAssetCode:
        type: string
      createdAt:
        type: string
      id:
        type: string
      ledgerId:
        type: string
      metadata:
        additionalProperties: {}
        type: object
      organizationId:
        type: string
      scale:
        type: number
      source:
        type: string
    type: object
  assetrate.CreateAssetRateInput:
    properties:
      amount:
        type: number
      baseAssetCode:
        type: string
      counterAssetCode:
        type: string
      metadata:
        additionalProperties: {}
        type: object
      scale:
        type: number
      source:
        type: string
    type: object
  model.Amount:
    properties:
      asset:
        type: string
      scale:
        minimum: 0
        type: integer
      value:
        type: integer
    required:
    - asset
    - value
    type: object
  model.Distribute:
    properties:
      remaining:
        type: string
      to:
        items:
          $ref: '#/definitions/model.FromTo'
        type: array
    required:
    - to
    type: object
  model.FromTo:
    properties:
      account:
        type: string
      amount:
        $ref: '#/definitions/model.Amount'
      chartOfAccountsG:
        type: string
      description:
        type: string
      isFrom:
        type: boolean
      metadata:
        additionalProperties: {}
        type: object
      remaining:
        type: string
      share:
        $ref: '#/definitions/model.Share'
    type: object
  model.Send:
    properties:
      asset:
        type: string
      scale:
        minimum: 0
        type: integer
      source:
        $ref: '#/definitions/model.Source'
      value:
        type: integer
    required:
    - asset
    - source
    - value
    type: object
  model.Share:
    properties:
      descWhatever:
        type: boolean
      percentage:
        type: integer
      percentageOfPercentage:
        type: integer
    required:
    - percentage
    type: object
  model.Source:
    properties:
      from:
        items:
          $ref: '#/definitions/model.FromTo'
        type: array
      remaining:
        type: string
    required:
    - from
    type: object
  operation.Status:
    properties:
      code:
        example: ACTIVE
        maxLength: 100
        type: string
      description:
        example: Active status
        maxLength: 256
        type: string
    type: object
  transaction.CreateTransactionInput:
    properties:
      chartOfAccountsGroupName:
        maxLength: 256
        type: string
      code:
        maxLength: 100
        type: string
      description:
        maxLength: 256
        type: string
      distribute:
        $ref: '#/definitions/model.Distribute'
      metadata:
        additionalProperties: {}
        type: object
      pending:
        type: boolean
      send:
        $ref: '#/definitions/model.Send'
    required:
    - distribute
    - send
    type: object
  transaction.Status:
    properties:
      code:
        maxLength: 100
        type: string
      description:
        maxLength: 256
        type: string
    type: object
  transaction.Transaction:
    properties:
      amount:
        type: number
      amountScale:
        type: number
      assetCode:
        type: string
      chartOfAccountsGroupName:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      destination:
        items:
          type: string
        type: array
      id:
        type: string
      ledgerId:
        type: string
      metadata:
        additionalProperties: {}
        type: object
      operations:
        items:
          $ref: '#/definitions/Operation'
        type: array
      organizationId:
        type: string
      parentTransactionId:
        type: string
      source:
        items:
          type: string
        type: array
      status:
        $ref: '#/definitions/transaction.Status'
      template:
        type: string
      updatedAt:
        type: string
    type: object
  transaction.UpdateTransactionInput:
    properties:
      description:
        maxLength: 256
        type: string
      metadata:
        additionalProperties: {}
        type: object
    type: object
host: localhost:3002
info:
  contact:
    name: Discord community
    url: https://discord.gg/DnhqKwkGv3
  description: This is a swagger documentation for the Midaz Transaction API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Midaz Transaction API
  version: "1.0"
paths:
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/{account_id}/operations:
    get:
      description: Get all Operations with the input ID
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Account ID
        in: path
        name: account_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Pagination'
            - properties:
                items:
                  items:
                    $ref: '#/definitions/Operation'
                  type: array
              type: object
      summary: Get all Operations by account
      tags:
      - Operations
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/{account_id}/operations/{operation_id}:
    get:
      description: Get an Operation with the input ID
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Account ID
        in: path
        name: account_id
        required: true
        type: string
      - description: Operation ID
        in: path
        name: operation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Operation'
      summary: Get an Operation by account
      tags:
      - Operations
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/asset-rates:
    post:
      consumes:
      - application/json
      description: Create an AssetRate with the input payload
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: AssetRate Input
        in: body
        name: asset-rate
        required: true
        schema:
          $ref: '#/definitions/assetrate.CreateAssetRateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/assetrate.AssetRate'
      summary: Create an AssetRate
      tags:
      - AssetRates
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/asset-rates/{asset_rate_id}:
    get:
      description: Get an AssetRate with the input ID
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: AssetRate ID
        in: path
        name: asset_rate_id
        required: true
        type: string
      - description: AssetRate Input
        in: body
        name: asset-rate
        required: true
        schema:
          $ref: '#/definitions/assetrate.CreateAssetRateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/assetrate.AssetRate'
      summary: Get an AssetRate by ID
      tags:
      - AssetRates
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/portfolios/{portfolio_id}/operations:
    get:
      description: Get all Operations with the input ID
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Portfolio ID
        in: path
        name: portfolio_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Pagination'
            - properties:
                items:
                  items:
                    $ref: '#/definitions/Operation'
                  type: array
              type: object
      summary: Get all Operations by portfolio
      tags:
      - Operations
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/portfolios/{portfolio_id}/operations/{operation_id}:
    get:
      description: Get an Operation with the input ID
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Portfolio ID
        in: path
        name: portfolio_id
        required: true
        type: string
      - description: Operation ID
        in: path
        name: operation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Operation'
      summary: Get an Operation by portfolio
      tags:
      - Operations
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions:
    get:
      description: Get all Transactions with the input metadata or without metadata
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Pagination'
            - properties:
                items:
                  items:
                    $ref: '#/definitions/transaction.Transaction'
                  type: array
              type: object
      summary: Get all Transactions
      tags:
      - Transactions
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}:
    get:
      description: Get a Transaction with the input ID
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transaction.Transaction'
      summary: Get a Transaction by ID
      tags:
      - Transactions
    patch:
      consumes:
      - application/json
      description: Update a Transaction with the input payload
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      - description: Transaction Input
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/transaction.UpdateTransactionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transaction.Transaction'
      summary: Update a Transaction
      tags:
      - Transactions
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}/operations/{operation_id}:
    patch:
      consumes:
      - application/json
      description: Update an Operation with the input payload
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      - description: Operation ID
        in: path
        name: operation_id
        required: true
        type: string
      - description: Operation Input
        in: body
        name: operation
        required: true
        schema:
          $ref: '#/definitions/UpdateOperationInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Operation'
      summary: Update an Operation
      tags:
      - Operations
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/dsl:
    post:
      consumes:
      - multipart/form-data
      description: Create a Transaction with the input DSL file
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction DSL file
        in: formData
        name: transaction
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transaction.Transaction'
      summary: Create a Transaction using DSL
      tags:
      - Transactions
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/json:
    post:
      consumes:
      - application/json
      description: Create a Transaction with the input payload
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction Input
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/transaction.CreateTransactionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transaction.Transaction'
      summary: Create a Transaction using JSON
      tags:
      - Transactions
swagger: "2.0"
