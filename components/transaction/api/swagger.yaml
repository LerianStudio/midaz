basePath: /
definitions:
  Amount:
    description: Amount is the struct designed to represent the amount of an operation.
    properties:
      asset:
        example: BRL
        type: string
      operation:
        type: string
      scale:
        example: 2
        minimum: 0
        type: integer
      value:
        example: 1000
        type: integer
    required:
    - asset
    - value
    type: object
  AssetRate:
    description: AssetRate is a struct designed to store asset rate data.
    properties:
      createdAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      externalId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      from:
        example: USD
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      ledgerId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      metadata:
        additionalProperties: {}
        type: object
      organizationId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      rate:
        example: 100
        type: number
      scale:
        example: 2
        type: number
      source:
        example: External System
        type: string
      to:
        example: BRL
        type: string
      ttl:
        example: 3600
        type: integer
      updatedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  Balance:
    description: Balance is the struct designed to represent the account balance.
    properties:
      available:
        example: 1500
        type: integer
      onHold:
        example: 500
        type: integer
      scale:
        example: 2
        type: integer
    type: object
  CreateAssetRateInput:
    description: CreateAssetRateInput is the input payload to create an asset rate.
    properties:
      externalId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      from:
        example: USD
        type: string
      metadata:
        additionalProperties: {}
        type: object
      rate:
        example: 100
        type: integer
      scale:
        example: 2
        minimum: 0
        type: integer
      source:
        example: External System
        type: string
      to:
        example: BRL
        type: string
      ttl:
        example: 3600
        type: integer
    required:
    - from
    - rate
    - to
    type: object
  CreateTransactionInput:
    description: CreateTransactionInput is the input payload to create a transaction.
    properties:
      chartOfAccountsGroupName:
        maxLength: 256
        type: string
      code:
        maxLength: 100
        type: string
      description:
        maxLength: 256
        type: string
      metadata:
        additionalProperties: {}
        type: object
      pending:
        type: boolean
      send:
        $ref: '#/definitions/Send'
    required:
    - send
    type: object
  Distribute:
    description: Distribute is the struct designed to represent the distribution fields
      of an operation.
    properties:
      remaining:
        type: string
      to:
        items:
          $ref: '#/definitions/FromTo'
        type: array
    required:
    - to
    type: object
  Error:
    description: Standardized error response format used across all API endpoints
      for error situations
    properties:
      code:
        description: |-
          Error code identifying the specific error condition
          example: ERR_INVALID_INPUT
        type: string
      entityType:
        description: |-
          Optional type of entity associated with the error
          example: Organization
        type: string
      fields:
        additionalProperties:
          type: string
        description: |-
          Optional detailed field validations for client-side handling
          example: {"name": "Field 'name' is required"}
        type: object
      message:
        description: |-
          Detailed error message explaining the issue
          example: The request contains invalid fields. Please check the field 'name' and try again.
        type: string
      title:
        description: |-
          Short, human-readable error title
          example: Bad Request
        type: string
    type: object
  FromTo:
    description: FromTo is the struct designed to represent the from/to fields of
      an operation.
    properties:
      account:
        example: '@person1'
        type: string
      amount:
        $ref: '#/definitions/Amount'
      chartOfAccounts:
        example: "1000"
        type: string
      description:
        example: description
        type: string
      isFrom:
        example: true
        type: boolean
      metadata:
        additionalProperties: {}
        type: object
      rate:
        $ref: '#/definitions/Rate'
      remaining:
        example: remaining
        type: string
      share:
        $ref: '#/definitions/Share'
    type: object
  Operation:
    description: Operation is a struct designed to store operation data.
    properties:
      accountAlias:
        example: '@person1'
        type: string
      accountId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      amount:
        $ref: '#/definitions/Amount'
      assetCode:
        example: BRL
        type: string
      balance:
        $ref: '#/definitions/Balance'
      balanceAfter:
        $ref: '#/definitions/Balance'
      balanceId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      chartOfAccounts:
        example: "1000"
        type: string
      createdAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      deletedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      description:
        example: Credit card operation
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      ledgerId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      metadata:
        additionalProperties: {}
        type: object
      organizationId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      status:
        $ref: '#/definitions/Status'
      transactionId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      type:
        example: creditCard
        type: string
      updatedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  Pagination:
    description: Pagination is the struct designed to store the pagination data of
      an entity list.
    properties:
      items: {}
      limit:
        example: 10
        type: integer
      next_cursor:
        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwMA==
        type: string
        x-omitempty: true
      page:
        example: 1
        type: integer
      prev_cursor:
        example: MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwMA==
        type: string
        x-omitempty: true
    type: object
  Rate:
    description: Rate is the struct designed to represent the rate fields of an operation.
    properties:
      externalId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      from:
        example: BRL
        type: string
      scale:
        example: 2
        minimum: 0
        type: integer
      to:
        example: USDe
        type: string
      value:
        example: 1000
        type: integer
    required:
    - externalId
    - from
    - to
    - value
    type: object
  Send:
    description: Send is the struct designed to represent the sending fields of an
      operation.
    properties:
      asset:
        example: BRL
        type: string
      distribute:
        $ref: '#/definitions/Distribute'
      scale:
        example: 2
        minimum: 0
        type: integer
      source:
        $ref: '#/definitions/Source'
      value:
        example: 1000
        type: integer
    required:
    - asset
    - distribute
    - source
    - value
    type: object
  Share:
    description: Share is the struct designed to represent the sharing fields of an
      operation.
    properties:
      percentage:
        type: integer
      percentageOfPercentage:
        type: integer
    required:
    - percentage
    type: object
  Source:
    description: Source is the struct designed to represent the source fields of an
      operation.
    properties:
      from:
        items:
          $ref: '#/definitions/FromTo'
        type: array
      remaining:
        example: remaining
        type: string
    required:
    - from
    type: object
  Status:
    description: Status is the struct designed to represent the status of a transaction.
    properties:
      code:
        example: ACTIVE
        maxLength: 100
        type: string
      description:
        example: Active status
        maxLength: 256
        type: string
    type: object
  Transaction:
    description: Transaction is a struct designed to store transaction data.
    properties:
      amount:
        example: 1500
        type: integer
      amountScale:
        example: 2
        type: integer
      assetCode:
        example: BRL
        type: string
      chartOfAccountsGroupName:
        example: Chart of accounts group name
        type: string
      createdAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      deletedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      description:
        example: Transaction description
        type: string
      destination:
        example:
        - '@person2'
        items:
          type: string
        type: array
      id:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      ledgerId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      metadata:
        additionalProperties: {}
        type: object
      operations:
        items:
          $ref: '#/definitions/Operation'
        type: array
      organizationId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      parentTransactionId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      source:
        example:
        - '@person1'
        items:
          type: string
        type: array
      status:
        $ref: '#/definitions/Status'
      template:
        example: Transaction template
        type: string
      updatedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  UpdateOperationInput:
    description: UpdateOperationInput is the input payload to update an operation.
    properties:
      description:
        example: Credit card operation
        maxLength: 256
        type: string
      metadata:
        additionalProperties: {}
        type: object
    type: object
  UpdateTransactionInput:
    description: UpdateTransactionInput is the input payload to update a transaction.
    properties:
      description:
        example: Transaction description
        maxLength: 256
        type: string
      metadata:
        additionalProperties: {}
        type: object
    type: object
  github_com_LerianStudio_midaz_components_transaction_internal_adapters_postgres_transaction.InputDSL:
    properties:
      transactionType:
        type: string
      transactionTypeCode:
        type: string
      variables:
        additionalProperties: {}
        type: object
    type: object
  mmodel.Balance:
    description: Balance is a struct designed to store balance data.
    properties:
      accountId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      accountType:
        example: creditCard
        type: string
      alias:
        example: '@person1'
        type: string
      allowReceiving:
        example: true
        type: boolean
      allowSending:
        example: true
        type: boolean
      assetCode:
        example: BRL
        type: string
      available:
        example: 1500
        type: integer
      createdAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      deletedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      ledgerId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      metadata:
        additionalProperties: {}
        type: object
      onHold:
        example: 500
        type: integer
      organizationId:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      scale:
        example: 2
        type: integer
      updatedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
      version:
        example: 1
        type: integer
    type: object
  mmodel.UpdateBalance:
    properties:
      allowReceiving:
        example: true
        type: boolean
      allowSending:
        example: true
        type: boolean
    type: object
host: localhost:3001
info:
  contact:
    name: Discord community
    url: https://discord.gg/DnhqKwkGv3
  description: This is a swagger documentation for the Midaz Transaction API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Midaz Transaction API
  version: v1.48.0
paths:
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/{account_id}/balances:
    get:
      description: Get all balances by account id
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Account ID
        in: path
        name: account_id
        required: true
        type: string
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      - description: Cursor
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Pagination'
            - properties:
                ' next_cursor':
                  type: string
                ' prev_cursor':
                  type: string
                items:
                  items:
                    $ref: '#/definitions/mmodel.Balance'
                  type: array
                limit:
                  type: integer
              type: object
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Account not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all balances by account id
      tags:
      - Balances
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/{account_id}/operations:
    get:
      description: Get all Operations with the input ID
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Account ID
        in: path
        name: account_id
        required: true
        type: string
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      - description: Cursor
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Pagination'
            - properties:
                ' next_cursor':
                  type: string
                ' prev_cursor':
                  type: string
                items:
                  items:
                    $ref: '#/definitions/Operation'
                  type: array
                limit:
                  type: integer
              type: object
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Account not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all Operations by account
      tags:
      - Operations
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/{account_id}/operations/{operation_id}:
    get:
      description: Get an Operation with the input ID
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Account ID
        in: path
        name: account_id
        required: true
        type: string
      - description: Operation ID
        in: path
        name: operation_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Operation'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Operation not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Get an Operation by account
      tags:
      - Operations
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/asset-rates:
    put:
      consumes:
      - application/json
      description: Create or Update an AssetRate with the input details
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: AssetRate Input
        in: body
        name: asset-rate
        required: true
        schema:
          $ref: '#/definitions/CreateAssetRateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AssetRate'
        "400":
          description: Invalid input, validation errors
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Ledger or organization not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Create or Update an AssetRate
      tags:
      - Asset Rates
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/asset-rates/{external_id}:
    get:
      description: Get an AssetRate by External ID with the input details
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: External ID
        in: path
        name: external_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AssetRate'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Asset rate not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Get an AssetRate by External ID
      tags:
      - Asset Rates
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/asset-rates/from/{asset_code}:
    get:
      description: Get an AssetRate by the Asset Code with the input details
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: From Asset Code
        in: path
        name: asset_code
        required: true
        type: string
      - collectionFormat: csv
        description: To Asset Codes
        in: query
        items:
          type: string
        name: to
        type: array
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      - description: Sort Order
        enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      - description: Cursor
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Pagination'
            - properties:
                items:
                  items:
                    $ref: '#/definitions/AssetRate'
                  type: array
                limit:
                  type: integer
                next_cursor:
                  type: string
                prev_cursor:
                  type: string
              type: object
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Asset code not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Get an AssetRate by the Asset Code
      tags:
      - Asset Rates
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/balances:
    get:
      description: Get all balances
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      - description: Cursor
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Pagination'
            - properties:
                ' next_cursor':
                  type: string
                ' prev_cursor':
                  type: string
                items:
                  items:
                    $ref: '#/definitions/mmodel.Balance'
                  type: array
                limit:
                  type: integer
              type: object
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all balances
      tags:
      - Balances
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/balances/{balance_id}:
    delete:
      description: Delete a Balance with the input ID
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Balance ID
        in: path
        name: balance_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Balance successfully deleted
          schema:
            type: string
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Balance not found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: 'Conflict: Cannot delete balance with active operations'
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Delete Balance by account
      tags:
      - Balances
    get:
      description: Get a Balance with the input ID
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Balance ID
        in: path
        name: balance_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mmodel.Balance'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Balance not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Get Balance by id
      tags:
      - Balances
    patch:
      consumes:
      - application/json
      description: Update a Balance with the input payload
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Balance ID
        in: path
        name: balance_id
        required: true
        type: string
      - description: Balance Input
        in: body
        name: balance
        required: true
        schema:
          $ref: '#/definitions/mmodel.UpdateBalance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mmodel.Balance'
        "400":
          description: Invalid input, validation errors
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Balance not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Update Balance
      tags:
      - Balances
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions:
    get:
      description: Get all Transactions with the input metadata or without metadata
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      - description: Sort Order
        enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      - description: Cursor
        in: query
        name: cursor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Pagination'
            - properties:
                items:
                  items:
                    $ref: '#/definitions/Transaction'
                  type: array
                limit:
                  type: integer
                next_cursor:
                  type: string
                page:
                  type: object
                prev_cursor:
                  type: string
              type: object
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Get all Transactions
      tags:
      - Transactions
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}:
    get:
      description: Get a Transaction with the input ID
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Transaction'
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Transaction not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Get a Transaction by ID
      tags:
      - Transactions
    patch:
      consumes:
      - application/json
      description: Update a Transaction with the input payload
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      - description: Transaction Input
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/UpdateTransactionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Transaction'
        "400":
          description: Invalid input, validation errors
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Transaction not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Update a Transaction
      tags:
      - Transactions
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}/commit:
    post:
      description: Commit a previously created transaction
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema: {}
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Commit a Transaction
      tags:
      - Transactions
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}/operations/{operation_id}:
    patch:
      consumes:
      - application/json
      description: Update an Operation with the input payload
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      - description: Operation ID
        in: path
        name: operation_id
        required: true
        type: string
      - description: Operation Input
        in: body
        name: operation
        required: true
        schema:
          $ref: '#/definitions/UpdateOperationInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Operation'
        "400":
          description: Invalid input, validation errors
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Operation not found
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Update an Operation
      tags:
      - Operations
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}/revert:
    post:
      consumes:
      - application/json
      description: Revert a Transaction with Transaction ID only
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: transaction_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Transaction'
        "400":
          description: Invalid request or transaction cannot be reverted
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Transaction not found
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: Transaction already has a parent transaction
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Revert a Transaction
      tags:
      - Transactions
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/dsl:
    post:
      consumes:
      - multipart/form-data
      description: Create a Transaction with the input DSL file
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction DSL file
        in: formData
        name: transaction
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Transaction'
        "400":
          description: Invalid DSL file format or validation errors
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a Transaction using DSL
      tags:
      - Transactions
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/json:
    post:
      consumes:
      - application/json
      description: Create a Transaction with the input payload
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction Input
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/CreateTransactionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Transaction'
        "400":
          description: Invalid input, validation errors
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: Unauthorized access
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: Forbidden access
          schema:
            $ref: '#/definitions/Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
      summary: Create a Transaction using JSON
      tags:
      - Transactions
  /v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/templates:
    post:
      consumes:
      - application/json
      description: Create a Transaction with the input template
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request ID
        in: header
        name: X-Request-Id
        type: string
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      - description: Ledger ID
        in: path
        name: ledger_id
        required: true
        type: string
      - description: Transaction Template Input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/github_com_LerianStudio_midaz_components_transaction_internal_adapters_postgres_transaction.InputDSL'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_LerianStudio_midaz_components_transaction_internal_adapters_postgres_transaction.InputDSL'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create a Transaction Template
      tags:
      - Transactions
swagger: "2.0"
