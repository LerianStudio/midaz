{
    "swagger": "2.0",
    "info": {
        "description": "This is a swagger documentation for the Midaz Transaction API",
        "title": "Midaz Transaction API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Discord community",
            "url": "https://discord.gg/DnhqKwkGv3"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.48.0"
    },
    "host": "localhost:3001",
    "basePath": "/",
    "paths": {
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/alias/{alias}/balances": {
            "get": {
                "description": "Get Balances with alias",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balances"
                ],
                "summary": "Get Balances using Alias",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Alias (e.g. @person1)",
                        "name": "alias",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " next_cursor": {
                                            "type": "string"
                                        },
                                        " prev_cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/mmodel.Balance"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Balance not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/external/{code}/balances": {
            "get": {
                "description": "Get External balances with code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balances"
                ],
                "summary": "Get External balances using code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Code (e.g. BRL)",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " next_cursor": {
                                            "type": "string"
                                        },
                                        " prev_cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/mmodel.Balance"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Balance not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/{account_id}/balances": {
            "get": {
                "description": "Get all balances by account id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balances"
                ],
                "summary": "Get all balances by account id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " next_cursor": {
                                            "type": "string"
                                        },
                                        " prev_cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/mmodel.Balance"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/{account_id}/operations": {
            "get": {
                "description": "Get all Operations with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Get all Operations by account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DEBIT, CREDIT",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " next_cursor": {
                                            "type": "string"
                                        },
                                        " prev_cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Operation"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/{account_id}/operations/{operation_id}": {
            "get": {
                "description": "Get an Operation with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Get an Operation by account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operation ID",
                        "name": "operation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/asset-rates": {
            "put": {
                "description": "Create or Update an AssetRate with the input details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset Rates"
                ],
                "summary": "Create or Update an AssetRate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AssetRate Input",
                        "name": "asset-rate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAssetRateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AssetRate"
                        }
                    },
                    "400": {
                        "description": "Invalid input, validation errors",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Ledger or organization not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/asset-rates/from/{asset_code}": {
            "get": {
                "description": "Get an AssetRate by the Asset Code with the input details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset Rates"
                ],
                "summary": "Get an AssetRate by the Asset Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "From Asset Code",
                        "name": "asset_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "To Asset Codes",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/AssetRate"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "next_cursor": {
                                            "type": "string"
                                        },
                                        "prev_cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Asset code not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/asset-rates/{external_id}": {
            "get": {
                "description": "Get an AssetRate by External ID with the input details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset Rates"
                ],
                "summary": "Get an AssetRate by External ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "External ID",
                        "name": "external_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AssetRate"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Asset rate not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/balances": {
            "get": {
                "description": "Get all balances",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balances"
                ],
                "summary": "Get all balances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " next_cursor": {
                                            "type": "string"
                                        },
                                        " prev_cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/mmodel.Balance"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/balances/{balance_id}": {
            "get": {
                "description": "Get a Balance with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balances"
                ],
                "summary": "Get Balance by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Balance ID",
                        "name": "balance_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mmodel.Balance"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Balance not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Balance with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balances"
                ],
                "summary": "Delete Balance by account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Balance ID",
                        "name": "balance_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Balance successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Balance not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict: Cannot delete balance with active operations",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a Balance with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balances"
                ],
                "summary": "Update Balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Balance ID",
                        "name": "balance_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Balance Input",
                        "name": "balance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateBalance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mmodel.Balance"
                        }
                    },
                    "400": {
                        "description": "Invalid input, validation errors",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Balance not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions": {
            "get": {
                "description": "Get all Transactions with the input metadata or without metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get all Transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Transaction"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "next_cursor": {
                                            "type": "string"
                                        },
                                        "page": {
                                            "type": "object"
                                        },
                                        "prev_cursor": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/dsl": {
            "post": {
                "description": "Create a Transaction with the input DSL file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a Transaction using DSL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Transaction DSL file",
                        "name": "transaction",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid DSL file format or validation errors",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/inflow": {
            "post": {
                "description": "Create a Transaction with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a Transaction without passing from source",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction Input",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateTransactionInflowSwaggerModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid input, validation errors",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/json": {
            "post": {
                "description": "Create a Transaction with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a Transaction using JSON",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction Input",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_LerianStudio_midaz_components_transaction_internal_adapters_postgres_transaction.CreateTransactionSwaggerModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid input, validation errors",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/outflow": {
            "post": {
                "description": "Create a Transaction with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a Transaction without passing to distribution",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction Input",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateTransactionOutflowSwaggerModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid input, validation errors",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}": {
            "get": {
                "description": "Get a Transaction with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get a Transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a Transaction with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Update a Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction Input",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateTransactionInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid input, validation errors",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}/commit": {
            "post": {
                "description": "Commit a previously created transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Commit a Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}/operations/{operation_id}": {
            "patch": {
                "description": "Update an Operation with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Update an Operation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Operation ID",
                        "name": "operation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Operation Input",
                        "name": "operation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateOperationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    },
                    "400": {
                        "description": "Invalid input, validation errors",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Operation not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/transactions/{transaction_id}/revert": {
            "post": {
                "description": "Revert a Transaction with Transaction ID only",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Revert a Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "X-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid request or transaction cannot be reverted",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden access",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Transaction already has a parent transaction",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Amount": {
            "description": "Amount is the struct designed to represent the amount of an operation. Contains the value and scale (decimal places) of an operation amount.",
            "type": "object",
            "properties": {
                "amount": {
                    "description": "The amount value in the smallest unit of the asset (e.g., cents)\nexample: 1500\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 1500
                },
                "scale": {
                    "description": "Decimal places for the amount (e.g., 2 for dollars/euros, 8 for BTC)\nexample: 2\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 2
                }
            }
        },
        "AssetRate": {
            "description": "AssetRate is a struct designed to store asset rate data. Represents a complete asset rate entity containing conversion information between two assets, including all system-generated fields.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Timestamp when the asset rate was created\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "externalId": {
                    "description": "External identifier for integration with third-party systems\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "from": {
                    "description": "Source asset code\nexample: USD\nminLength: 2\nmaxLength: 10",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2,
                    "example": "USD"
                },
                "id": {
                    "description": "Unique identifier for the asset rate\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ledgerId": {
                    "description": "Ledger containing this asset rate\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "description": "Additional custom attributes\nexample: {\"provider\": \"Central Bank\", \"rateName\": \"Official Exchange Rate\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "organizationId": {
                    "description": "Organization that owns this asset rate\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "rate": {
                    "description": "Conversion rate value\nexample: 100",
                    "type": "number",
                    "example": 100
                },
                "scale": {
                    "description": "Decimal places for the rate\nexample: 2\nminimum: 0",
                    "type": "number",
                    "minimum": 0,
                    "example": 2
                },
                "source": {
                    "description": "Source of rate information\nexample: External System\nmaxLength: 200",
                    "type": "string",
                    "maxLength": 200,
                    "example": "External System"
                },
                "to": {
                    "description": "Target asset code\nexample: BRL\nminLength: 2\nmaxLength: 10",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2,
                    "example": "BRL"
                },
                "ttl": {
                    "description": "Time-to-live in seconds\nexample: 3600\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 3600
                },
                "updatedAt": {
                    "description": "Timestamp when the asset rate was last updated\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "Balance": {
            "description": "Balance is the struct designed to represent the account balance. Contains available and on-hold amounts along with the scale (decimal places).",
            "type": "object",
            "properties": {
                "available": {
                    "description": "Amount available for transactions (in smallest unit of asset)\nexample: 1500\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 1500
                },
                "onHold": {
                    "description": "Amount on hold and unavailable for transactions (in smallest unit of asset)\nexample: 500\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 500
                },
                "scale": {
                    "description": "Decimal places for the balance (e.g., 2 for dollars/euros)\nexample: 2\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 2
                }
            }
        },
        "CreateAssetRateInput": {
            "description": "CreateAssetRateInput is the input payload to create an asset rate. Contains required fields for setting up asset conversion rates, including source and target assets, rate value, scale, and optional metadata.",
            "type": "object",
            "required": [
                "from",
                "rate",
                "to"
            ],
            "properties": {
                "externalId": {
                    "description": "External identifier for integration (optional)\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "from": {
                    "description": "Source asset code (required)\nexample: USD\nrequired: true\nminLength: 2\nmaxLength: 10",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2,
                    "example": "USD"
                },
                "metadata": {
                    "description": "Additional custom attributes (optional)\nexample: {\"provider\": \"Central Bank\", \"rateName\": \"Official Exchange Rate\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "rate": {
                    "description": "Conversion rate value (required)\nexample: 100\nrequired: true",
                    "type": "integer",
                    "example": 100
                },
                "scale": {
                    "description": "Decimal places for the rate (optional)\nexample: 2\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 2
                },
                "source": {
                    "description": "Source of rate information (optional)\nexample: External System\nmaxLength: 200",
                    "type": "string",
                    "maxLength": 200,
                    "example": "External System"
                },
                "to": {
                    "description": "Target asset code (required)\nexample: BRL\nrequired: true\nminLength: 2\nmaxLength: 10",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2,
                    "example": "BRL"
                },
                "ttl": {
                    "description": "Time-to-live in seconds (optional)\nexample: 3600\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 3600
                }
            }
        },
        "CreateTransactionInflowSwaggerModel": {
            "description": "Schema for creating inflow transaction with the complete SendInflow operation structure defined inline",
            "type": "object",
            "properties": {
                "chartOfAccountsGroupName": {
                    "description": "Chart of accounts group name for accounting purposes\nexample: FUNDING\nmaxLength: 256",
                    "type": "string"
                },
                "code": {
                    "description": "Transaction code for reference\nexample: TR12345\nmaxLength: 100",
                    "type": "string"
                },
                "description": {
                    "description": "Human-readable description of the transaction\nexample: New Inflow Transaction\nmaxLength: 256",
                    "type": "string"
                },
                "metadata": {
                    "description": "Additional custom attributes\nexample: {\"reference\": \"TRANSACTION-001\", \"source\": \"api\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "pending": {
                    "description": "Whether the transaction should be created in pending state\nswagger:ignore",
                    "type": "boolean"
                },
                "send": {
                    "description": "Send operation details including distribution only\nrequired: true",
                    "type": "object",
                    "properties": {
                        "asset": {
                            "description": "Asset code for the transaction\nexample: USD\nrequired: true",
                            "type": "string"
                        },
                        "distribute": {
                            "description": "Destination accounts and amounts for the transaction\nrequired: true",
                            "type": "object",
                            "properties": {
                                "to": {
                                    "description": "List of destination operations\nrequired: true",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "account": {
                                                "description": "Account identifier or alias\nexample: {{accountAlias}}\nrequired: true",
                                                "type": "string"
                                            },
                                            "amount": {
                                                "description": "Amount details for the operation\nrequired: true",
                                                "type": "object",
                                                "properties": {
                                                    "asset": {
                                                        "description": "Asset code\nexample: USD\nrequired: true",
                                                        "type": "string"
                                                    },
                                                    "scale": {
                                                        "description": "Decimal places\nexample: 2\nrequired: true",
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "description": "Amount value in smallest unit\nexample: 100\nrequired: true",
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "chartOfAccounts": {
                                                "description": "Chart of accounts code\nexample: FUNDING_CREDIT",
                                                "type": "string"
                                            },
                                            "description": {
                                                "description": "Operation description\nexample: Credit Operation",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "description": "Additional metadata\nexample: {\"operation\": \"funding\", \"type\": \"account\"}",
                                                "type": "object",
                                                "additionalProperties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "scale": {
                            "description": "Decimal places for the transaction amount\nexample: 2\nrequired: true",
                            "type": "integer"
                        },
                        "value": {
                            "description": "Transaction amount value in the smallest unit of the asset\nexample: 100\nrequired: true",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "CreateTransactionOutflowSwaggerModel": {
            "description": "Schema for creating outflow transaction with the complete SendOutflow operation structure defined inline",
            "type": "object",
            "properties": {
                "chartOfAccountsGroupName": {
                    "description": "Chart of accounts group name for accounting purposes\nexample: WITHDRAWAL\nmaxLength: 256",
                    "type": "string"
                },
                "code": {
                    "description": "Transaction code for reference\nexample: TR12345\nmaxLength: 100",
                    "type": "string"
                },
                "description": {
                    "description": "Human-readable description of the transaction\nexample: New Outflow Transaction\nmaxLength: 256",
                    "type": "string"
                },
                "metadata": {
                    "description": "Additional custom attributes\nexample: {\"reference\": \"TRANSACTION-001\", \"source\": \"api\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "pending": {
                    "description": "Whether the transaction should be created in pending state\nswagger:ignore",
                    "type": "boolean"
                },
                "send": {
                    "description": "Send operation details including source only\nrequired: true",
                    "type": "object",
                    "properties": {
                        "asset": {
                            "description": "Asset code for the transaction\nexample: USD\nrequired: true",
                            "type": "string"
                        },
                        "scale": {
                            "description": "Decimal places for the transaction amount\nexample: 2\nrequired: true",
                            "type": "integer"
                        },
                        "source": {
                            "description": "Source accounts and amounts for the transaction\nrequired: true",
                            "type": "object",
                            "properties": {
                                "from": {
                                    "description": "List of source operations\nrequired: true",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "account": {
                                                "description": "Account identifier or alias\nexample: {{accountAlias}}\nrequired: true",
                                                "type": "string"
                                            },
                                            "amount": {
                                                "description": "Amount details for the operation\nrequired: true",
                                                "type": "object",
                                                "properties": {
                                                    "asset": {
                                                        "description": "Asset code\nexample: USD\nrequired: true",
                                                        "type": "string"
                                                    },
                                                    "scale": {
                                                        "description": "Decimal places\nexample: 2\nrequired: true",
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "description": "Amount value in smallest unit\nexample: 100\nrequired: true",
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "chartOfAccounts": {
                                                "description": "Chart of accounts code\nexample: WITHDRAWAL_DEBIT",
                                                "type": "string"
                                            },
                                            "description": {
                                                "description": "Operation description\nexample: Debit Operation",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "description": "Additional metadata\nexample: {\"operation\": \"withdrawal\", \"type\": \"account\"}",
                                                "type": "object",
                                                "additionalProperties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "value": {
                            "description": "Transaction amount value in the smallest unit of the asset\nexample: 100\nrequired: true",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "Error": {
            "description": "Standardized error response format used across all API endpoints for error situations. Provides structured information about errors including codes, messages, and field-specific validation details.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code identifying the specific error condition\nexample: ERR_INVALID_INPUT\nmaxLength: 50",
                    "type": "string",
                    "maxLength": 50,
                    "example": "ERR_INVALID_INPUT"
                },
                "entityType": {
                    "description": "Optional type of entity associated with the error\nexample: Organization\nmaxLength: 100",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Organization"
                },
                "fields": {
                    "description": "Optional detailed field validations for client-side handling\nexample: {\"name\": \"Field 'name' is required\"}",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "{\"name\"": " \"Field 'name' is required\"}"
                    }
                },
                "message": {
                    "description": "Detailed error message explaining the issue\nexample: The request contains invalid fields. Please check the field 'name' and try again.\nmaxLength: 500",
                    "type": "string",
                    "maxLength": 500,
                    "example": "The request contains invalid fields. Please check the field 'name' and try again."
                },
                "title": {
                    "description": "Short, human-readable error title\nexample: Bad Request\nmaxLength: 100",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Bad Request"
                }
            }
        },
        "Operation": {
            "description": "Operation is a struct designed to store operation data. Represents a financial operation that affects account balances, including details such as amount, balance before and after, transaction association, and metadata.",
            "type": "object",
            "properties": {
                "accountAlias": {
                    "description": "Human-readable alias for the account\nexample: @person1\nmaxLength: 256",
                    "type": "string",
                    "maxLength": 256,
                    "example": "@person1"
                },
                "accountId": {
                    "description": "Account identifier associated with this operation\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "amount": {
                    "description": "Operation amount information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Amount"
                        }
                    ]
                },
                "assetCode": {
                    "description": "Asset code for the operation\nexample: BRL\nminLength: 2\nmaxLength: 10",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2,
                    "example": "BRL"
                },
                "balance": {
                    "description": "Balance before the operation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Balance"
                        }
                    ]
                },
                "balanceAfter": {
                    "description": "Balance after the operation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Balance"
                        }
                    ]
                },
                "balanceId": {
                    "description": "Balance identifier affected by this operation\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "chartOfAccounts": {
                    "description": "Chart of accounts code for accounting purposes\nexample: 1000\nmaxLength: 20",
                    "type": "string",
                    "maxLength": 20,
                    "example": "1000"
                },
                "createdAt": {
                    "description": "Timestamp when the operation was created\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deletedAt": {
                    "description": "Timestamp when the operation was deleted (if soft-deleted)\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "description": {
                    "description": "Human-readable description of the operation\nexample: Credit card operation\nmaxLength: 256",
                    "type": "string",
                    "maxLength": 256,
                    "example": "Credit card operation"
                },
                "id": {
                    "description": "Unique identifier for the operation\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ledgerId": {
                    "description": "Ledger identifier\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "description": "Additional custom attributes\nexample: {\"reason\": \"Purchase refund\", \"reference\": \"INV-12345\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "organizationId": {
                    "description": "Organization identifier\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "description": "Operation status information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Status"
                        }
                    ]
                },
                "transactionId": {
                    "description": "Parent transaction identifier\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "type": {
                    "description": "Type of operation (e.g., DEBIT, CREDIT)\nexample: DEBIT\nmaxLength: 50",
                    "type": "string",
                    "maxLength": 50,
                    "example": "DEBIT"
                },
                "updatedAt": {
                    "description": "Timestamp when the operation was last updated\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "Pagination": {
            "description": "Pagination is the struct designed to store the pagination data of an entity list.",
            "type": "object",
            "properties": {
                "items": {},
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "next_cursor": {
                    "type": "string",
                    "x-omitempty": true,
                    "example": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwMA=="
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "prev_cursor": {
                    "type": "string",
                    "x-omitempty": true,
                    "example": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwMA=="
                }
            }
        },
        "Status": {
            "description": "Status is the struct designed to represent the status of a transaction. Contains code and optional description for transaction states.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Status code identifying the state of the transaction\nexample: ACTIVE\nmaxLength: 100",
                    "type": "string",
                    "maxLength": 100,
                    "example": "ACTIVE"
                },
                "description": {
                    "description": "Optional descriptive text explaining the status\nexample: Active status\nmaxLength: 256",
                    "type": "string",
                    "maxLength": 256,
                    "example": "Active status"
                }
            }
        },
        "Transaction": {
            "description": "Transaction is a struct designed to store transaction data. Represents a financial transaction that consists of multiple operations affecting account balances, including details about the transaction's status, amounts, and related operations.",
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Transaction amount value in the smallest unit of the asset\nexample: 1500\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 1500
                },
                "amountScale": {
                    "description": "Decimal places for the transaction amount\nexample: 2\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 2
                },
                "assetCode": {
                    "description": "Asset code for the transaction\nexample: BRL\nminLength: 2\nmaxLength: 10",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2,
                    "example": "BRL"
                },
                "chartOfAccountsGroupName": {
                    "description": "Chart of accounts group name for accounting purposes\nexample: Chart of accounts group name\nmaxLength: 256",
                    "type": "string",
                    "maxLength": 256,
                    "example": "Chart of accounts group name"
                },
                "createdAt": {
                    "description": "Timestamp when the transaction was created\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deletedAt": {
                    "description": "Timestamp when the transaction was deleted (if soft-deleted)\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "description": {
                    "description": "Human-readable description of the transaction\nexample: Transaction description\nmaxLength: 256",
                    "type": "string",
                    "maxLength": 256,
                    "example": "Transaction description"
                },
                "destination": {
                    "description": "List of destination account aliases or identifiers\nexample: [\"@person2\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "@person2"
                    ]
                },
                "id": {
                    "description": "Unique identifier for the transaction\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ledgerId": {
                    "description": "Ledger identifier\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "description": "Additional custom attributes\nexample: {\"purpose\": \"Monthly payment\", \"category\": \"Utility\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "operations": {
                    "description": "List of operations associated with this transaction",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Operation"
                    }
                },
                "organizationId": {
                    "description": "Organization identifier\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "parentTransactionId": {
                    "description": "Parent transaction identifier (for reversals or child transactions)\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "source": {
                    "description": "List of source account aliases or identifiers\nexample: [\"@person1\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "@person1"
                    ]
                },
                "status": {
                    "description": "Transaction status information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Status"
                        }
                    ]
                },
                "template": {
                    "description": "Template used to create this transaction\nexample: Transaction template\nmaxLength: 100",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Transaction template"
                },
                "updatedAt": {
                    "description": "Timestamp when the transaction was last updated\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "UpdateBalance": {
            "description": "Request payload for updating an existing balance's permissions. All fields are optional - only specified fields will be updated. Omitted fields will remain unchanged.",
            "type": "object",
            "properties": {
                "allowReceiving": {
                    "description": "Whether the account should be allowed to receive funds to this balance\nrequired: false\nexample: true",
                    "type": "boolean",
                    "example": true
                },
                "allowSending": {
                    "description": "Whether the account should be allowed to send funds from this balance\nrequired: false\nexample: true",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "UpdateOperationInput": {
            "description": "UpdateOperationInput is the input payload to update an operation. Contains fields that can be modified after an operation is created.",
            "type": "object",
            "properties": {
                "description": {
                    "description": "Human-readable description of the operation\nexample: Credit card operation\nmaxLength: 256",
                    "type": "string",
                    "maxLength": 256,
                    "example": "Credit card operation"
                },
                "metadata": {
                    "description": "Additional custom attributes\nexample: {\"reason\": \"Purchase refund\", \"reference\": \"INV-12345\"}",
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "UpdateTransactionInput": {
            "description": "UpdateTransactionInput is the input payload to update a transaction. Contains fields that can be modified after a transaction is created.",
            "type": "object",
            "properties": {
                "description": {
                    "description": "Human-readable description of the transaction\nexample: Transaction description\nmaxLength: 256",
                    "type": "string",
                    "maxLength": 256,
                    "example": "Transaction description"
                },
                "metadata": {
                    "description": "Additional custom attributes\nexample: {\"purpose\": \"Monthly payment\", \"category\": \"Utility\"}",
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "github_com_LerianStudio_midaz_components_transaction_internal_adapters_postgres_transaction.CreateTransactionSwaggerModel": {
            "description": "Schema for creating transaction with the complete Send operation structure defined inline",
            "type": "object",
            "properties": {
                "chartOfAccountsGroupName": {
                    "description": "Chart of accounts group name for accounting purposes\nexample: FUNDING\nmaxLength: 256",
                    "type": "string"
                },
                "code": {
                    "description": "Transaction code for reference\nexample: TR12345\nmaxLength: 100",
                    "type": "string"
                },
                "description": {
                    "description": "Human-readable description of the transaction\nexample: New Transaction\nmaxLength: 256",
                    "type": "string"
                },
                "metadata": {
                    "description": "Additional custom attributes\nexample: {\"reference\": \"TRANSACTION-001\", \"source\": \"api\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "pending": {
                    "description": "Whether the transaction should be created in pending state\nswagger:ignore",
                    "type": "boolean"
                },
                "send": {
                    "description": "Send operation details including source and distribution\nrequired: true",
                    "type": "object",
                    "properties": {
                        "asset": {
                            "description": "Asset code for the transaction\nexample: USD\nrequired: true",
                            "type": "string"
                        },
                        "distribute": {
                            "description": "Destination accounts and amounts for the transaction\nrequired: true",
                            "type": "object",
                            "properties": {
                                "to": {
                                    "description": "List of destination operations\nrequired: true",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "account": {
                                                "description": "Account identifier or alias\nexample: {{accountAlias}}\nrequired: true",
                                                "type": "string"
                                            },
                                            "amount": {
                                                "description": "Amount details for the operation\nrequired: true",
                                                "type": "object",
                                                "properties": {
                                                    "asset": {
                                                        "description": "Asset code\nexample: USD\nrequired: true",
                                                        "type": "string"
                                                    },
                                                    "scale": {
                                                        "description": "Decimal places\nexample: 2\nrequired: true",
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "description": "Amount value in smallest unit\nexample: 100\nrequired: true",
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "chartOfAccounts": {
                                                "description": "Chart of accounts code\nexample: FUNDING_CREDIT",
                                                "type": "string"
                                            },
                                            "description": {
                                                "description": "Operation description\nexample: Credit Operation",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "description": "Additional metadata\nexample: {\"operation\": \"funding\", \"type\": \"account\"}",
                                                "type": "object",
                                                "additionalProperties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "scale": {
                            "description": "Decimal places for the transaction amount\nexample: 2\nrequired: true",
                            "type": "integer"
                        },
                        "source": {
                            "description": "Source accounts and amounts for the transaction\nrequired: true",
                            "type": "object",
                            "properties": {
                                "from": {
                                    "description": "List of source operations\nrequired: true",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "account": {
                                                "description": "Account identifier or alias\nexample: @external/USD\nrequired: true",
                                                "type": "string"
                                            },
                                            "amount": {
                                                "description": "Amount details for the operation\nrequired: true",
                                                "type": "object",
                                                "properties": {
                                                    "asset": {
                                                        "description": "Asset code\nexample: USD\nrequired: true",
                                                        "type": "string"
                                                    },
                                                    "scale": {
                                                        "description": "Decimal places\nexample: 2\nrequired: true",
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "description": "Amount value in smallest unit\nexample: 100\nrequired: true",
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "chartOfAccounts": {
                                                "description": "Chart of accounts code\nexample: FUNDING_DEBIT",
                                                "type": "string"
                                            },
                                            "description": {
                                                "description": "Operation description\nexample: Debit Operation",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "description": "Additional metadata\nexample: {\"operation\": \"funding\", \"type\": \"external\"}",
                                                "type": "object",
                                                "additionalProperties": {}
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "value": {
                            "description": "Transaction amount value in the smallest unit of the asset\nexample: 100\nrequired: true",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "mmodel.Balance": {
            "description": "Complete balance entity containing all fields including system-generated fields like ID, creation timestamps, and metadata. This is the response format for balance operations. Balances represent the amount of a specific asset held in an account, including available and on-hold amounts.",
            "type": "object",
            "properties": {
                "accountId": {
                    "description": "Account that holds this balance\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "accountType": {
                    "description": "Type of account holding this balance\nexample: creditCard\nmaxLength: 50",
                    "type": "string",
                    "maxLength": 50,
                    "example": "creditCard"
                },
                "alias": {
                    "description": "Alias for the account, used for easy identification or tagging\nexample: @person1\nmaxLength: 256",
                    "type": "string",
                    "maxLength": 256,
                    "example": "@person1"
                },
                "allowReceiving": {
                    "description": "Whether the account can receive funds to this balance\nexample: true",
                    "type": "boolean",
                    "example": true
                },
                "allowSending": {
                    "description": "Whether the account can send funds from this balance\nexample: true",
                    "type": "boolean",
                    "example": true
                },
                "assetCode": {
                    "description": "Asset code identifying the currency or asset type of this balance\nexample: USD\nminLength: 2\nmaxLength: 10",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 2,
                    "example": "USD"
                },
                "available": {
                    "description": "Amount available for transactions (in the smallest unit of the asset, e.g. cents)\nexample: 1500\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 1500
                },
                "createdAt": {
                    "description": "Timestamp when the balance was created (RFC3339 format)\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deletedAt": {
                    "description": "Timestamp when the balance was soft deleted, null if not deleted (RFC3339 format)\nexample: null\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "description": "Unique identifier for the balance (UUID format)\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ledgerId": {
                    "description": "Ledger containing the account this balance belongs to\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "description": "Custom key-value pairs for extending the balance information\nexample: {\"purpose\": \"Main savings\", \"category\": \"Personal\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "onHold": {
                    "description": "Amount currently on hold and unavailable for transactions\nexample: 500\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 500
                },
                "organizationId": {
                    "description": "Organization that owns this balance\nexample: 00000000-0000-0000-0000-000000000000\nformat: uuid",
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "scale": {
                    "description": "Decimal places for the asset (e.g. 2 for USD/EUR, 8 for BTC)\nexample: 2\nminimum: 0",
                    "type": "integer",
                    "minimum": 0,
                    "example": 2
                },
                "updatedAt": {
                    "description": "Timestamp when the balance was last updated (RFC3339 format)\nexample: 2021-01-01T00:00:00Z\nformat: date-time",
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "version": {
                    "description": "Optimistic concurrency control version\nexample: 1\nminimum: 1",
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                }
            }
        }
    }
}