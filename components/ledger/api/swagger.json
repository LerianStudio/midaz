{
    "swagger": "2.0",
    "info": {
        "description": "This is a swagger documentation for the Midaz Ledger API",
        "title": "Midaz Ledger API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Discord community",
            "url": "https://discord.gg/DnhqKwkGv3"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/v1/organizations": {
            "get": {
                "description": "Get all Organizations with the input metadata or without metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get all Organizations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Metadata",
                        "name": "metadata",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Organization"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "page": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create an Organization with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Create an Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "description": "Organization Input",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateOrganizationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{id}": {
            "get": {
                "description": "Get an Organization with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get an Organization by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an Organization with the input ID",
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete an Organization by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Update an Organization with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Update an Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Organization Input",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateOrganizationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers": {
            "get": {
                "description": "Get all Ledgers with the input metadata or without metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ledgers"
                ],
                "summary": "Get all Ledgers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Ledger"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "page": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Ledger with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ledgers"
                ],
                "summary": "Create a Ledger",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ledger Input",
                        "name": "ledger",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateLedgerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ledger"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{id}": {
            "get": {
                "description": "Get a Ledger with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ledgers"
                ],
                "summary": "Get a Ledger by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ledger"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Ledger with the input ID",
                "tags": [
                    "Ledgers"
                ],
                "summary": "Delete a Ledger by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Update a Ledger with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ledgers"
                ],
                "summary": "Update a Ledger",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ledger Input",
                        "name": "ledger",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateLedgerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Ledger"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts": {
            "get": {
                "description": "Get all Accounts with the input metadata or without metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get all Accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata",
                        "name": "metadata",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Account"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "page": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create an Account with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create an Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAccountInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/accounts/{id}": {
            "get": {
                "description": "Get an Account with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get an Account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an Account with the input ID",
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete an Account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Update an Account with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Update an Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAccountInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/assets": {
            "get": {
                "description": "Get all Assets with the input metadata or without metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get all Assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata",
                        "name": "metadata",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Asset"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "page": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create an Asset with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Create an Asset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Asset Input",
                        "name": "asset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAssetInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/assets/{id}": {
            "get": {
                "description": "Get an Asset with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get an Asset by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an Asset with the input ID",
                "tags": [
                    "Assets"
                ],
                "summary": "Delete an Asset by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Update an Asset with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Update an Asset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Asset Input",
                        "name": "asset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAssetInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/portfolios": {
            "get": {
                "description": "Get all Portfolios with the input metadata or without metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Get all Portfolios",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata query",
                        "name": "metadata",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Portfolio"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "page": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Portfolio with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Create a Portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Portfolio Payload",
                        "name": "portfolio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePortfolioInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Portfolio"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/portfolios/{id}": {
            "get": {
                "description": "Get a Portfolio with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Get a Portfolio by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Portfolio ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Portfolio"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Portfolio with the input ID",
                "tags": [
                    "Portfolios"
                ],
                "summary": "Delete a Portfolio by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Portfolio ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Update a Portfolio with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Update a Portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Portfolio ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Portfolio Payload",
                        "name": "portfolio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePortfolioInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Portfolio"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/portfolios/{portfolio_id}/accounts": {
            "get": {
                "description": "## This endpoint will be deprecated soon. Use Get all Accounts instead. ##\n---\nGet all Accounts with the input metadata or without metadata from a Portfolio",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get all Accounts from Portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Portfolio ID",
                        "name": "portfolio_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata",
                        "name": "metadata",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Account"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "## This endpoint will be deprecated soon. Use Create an Account instead. ##\n---\nCreate an Account with the input payload from a Portfolio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create an Account from Portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Portfolio ID",
                        "name": "portfolio_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAccountInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/portfolios/{portfolio_id}/accounts/{id}": {
            "get": {
                "description": "## This endpoint will be deprecated soon. Use Get an Account by ID instead. ##\n---\nGet an Account with the input ID from a Portfolio.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get an Account by ID from Portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Portfolio ID",
                        "name": "portfolio_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            },
            "delete": {
                "description": "## This endpoint will be deprecated soon. Use Delete an Account by ID instead. ##\n---\nDelete an Account with the input ID from a Portfolio",
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete an Account by ID from Portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Portfolio ID",
                        "name": "portfolio_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "## This endpoint will be deprecated soon. Use Update an Account instead. ##\n---\nUpdate an Account with the input payload from a Portfolio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Update an Account from Portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Portfolio ID",
                        "name": "portfolio_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAccountInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/products": {
            "get": {
                "description": "Get all Products with the input metadata or without metadata",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get all Products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata",
                        "name": "metadata",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-01-01",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort Order",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pagination"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Product"
                                            }
                                        },
                                        "limit": {
                                            "type": "integer"
                                        },
                                        "page": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a Product with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create a Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateProductInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                }
            }
        },
        "/v1/organizations/{organization_id}/ledgers/{ledger_id}/products/{id}": {
            "get": {
                "description": "Get a Product with the input ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get a Product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Product with the input ID",
                "tags": [
                    "Products"
                ],
                "summary": "Delete a Product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Update a Product with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update a Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "Midaz-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ledger ID",
                        "name": "ledger_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateProductInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Account": {
            "description": "Account is a struct designed to store account data.",
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string",
                    "example": "@person1"
                },
                "allowReceiving": {
                    "type": "boolean",
                    "example": true
                },
                "allowSending": {
                    "type": "boolean",
                    "example": true
                },
                "assetCode": {
                    "type": "string",
                    "example": "BRL"
                },
                "balance": {
                    "$ref": "#/definitions/Balance"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "entityId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ledgerId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "example": "My Account"
                },
                "organizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "parentAccountId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "portfolioId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "productId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "type": {
                    "type": "string",
                    "example": "creditCard"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "Address": {
            "description": "Address is a struct designed to store the address data of an organization.",
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "New York"
                },
                "country": {
                    "description": "According to ISO 3166-1 alpha-2",
                    "type": "string",
                    "example": "US"
                },
                "line1": {
                    "type": "string",
                    "example": "Street 1"
                },
                "line2": {
                    "type": "string",
                    "example": "Street 2"
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "zipCode": {
                    "type": "string",
                    "example": "00000-000"
                }
            }
        },
        "Asset": {
            "description": "Asset is a struct designed to store asset data.",
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "BRL"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ledgerId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "example": "Brazilian Real"
                },
                "organizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "type": {
                    "type": "string",
                    "example": "currency"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "Balance": {
            "description": "Balance is the struct designed to represent the account balance.",
            "type": "object",
            "properties": {
                "available": {
                    "type": "number",
                    "example": 1500
                },
                "onHold": {
                    "type": "number",
                    "example": 500
                },
                "scale": {
                    "type": "number",
                    "example": 2
                }
            }
        },
        "CreateAccountInput": {
            "description": "CreateAccountInput is the input payload to create an account.",
            "type": "object",
            "required": [
                "assetCode",
                "type"
            ],
            "properties": {
                "alias": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "@person1"
                },
                "allowReceiving": {
                    "type": "boolean",
                    "example": true
                },
                "allowSending": {
                    "type": "boolean",
                    "example": true
                },
                "assetCode": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "BRL"
                },
                "entityId": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "My Account"
                },
                "parentAccountId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "portfolioId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "productId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "type": {
                    "type": "string",
                    "example": "creditCard"
                }
            }
        },
        "CreateAssetInput": {
            "description": "CreateAssetInput is the input payload to create an asset.",
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "BRL"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Brazilian Real"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "type": {
                    "type": "string",
                    "example": "currency"
                }
            }
        },
        "CreateLedgerInput": {
            "description": "CreateLedgerInput is the input payload to create a ledger.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Lerian Studio"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "CreateOrganizationInput": {
            "description": "CreateOrganizationInput is the input payload to create an organization.",
            "type": "object",
            "required": [
                "legalDocument",
                "legalName"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "doingBusinessAs": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Lerian Studio"
                },
                "legalDocument": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "00000000000000"
                },
                "legalName": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Lerian Studio"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "parentOrganizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "CreatePortfolioInput": {
            "description": "CreatePortfolioInput is the input payload to create a portfolio.",
            "type": "object",
            "required": [
                "entityId",
                "name"
            ],
            "properties": {
                "entityId": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "My Portfolio"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "CreateProductInput": {
            "description": "CreateProductInput is the input payload to create a product.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "My Product"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "Ledger": {
            "description": "Ledger is a struct designed to store ledger data.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "example": "Lerian Studio"
                },
                "organizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "Organization": {
            "description": "Organization is a struct designed to store organization data.",
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "doingBusinessAs": {
                    "type": "string",
                    "example": "Lerian Studio"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "legalDocument": {
                    "type": "string",
                    "example": "00000000000000"
                },
                "legalName": {
                    "type": "string",
                    "example": "Lerian Studio"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "parentOrganizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "Pagination": {
            "description": "Pagination is the struct designed to store the pagination data of an entity list.",
            "type": "object",
            "properties": {
                "items": {},
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "next_cursor": {
                    "type": "string",
                    "x-omitempty": true,
                    "example": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwMA=="
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "prev_cursor": {
                    "type": "string",
                    "x-omitempty": true,
                    "example": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwMA=="
                }
            }
        },
        "Portfolio": {
            "description": "Portfolio is a struct designed to store portfolio data.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "entityId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ledgerId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "example": "My Portfolio"
                },
                "organizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "Product": {
            "description": "Product is a struct designed to store product data.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ledgerId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "example": "My Product"
                },
                "organizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "Status": {
            "description": "Status is the struct designed to store the status data of an entity.",
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "ACTIVE"
                },
                "description": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Active status"
                }
            }
        },
        "UpdateAccountInput": {
            "description": "UpdateAccountInput is the input payload to update an account.",
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "@person1"
                },
                "allowReceiving": {
                    "type": "boolean",
                    "example": true
                },
                "allowSending": {
                    "type": "boolean",
                    "example": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "My Account Updated"
                },
                "productId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "UpdateAssetInput": {
            "description": "UpdateAssetInput is the input payload to update an asset.",
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Bitcoin"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "UpdateLedgerInput": {
            "description": "UpdateLedgerInput is the input payload to update a ledger.",
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Lerian Studio Updated"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "UpdateOrganizationInput": {
            "description": "UpdateOrganizationInput is the input payload to update an organization.",
            "type": "object",
            "required": [
                "legalName"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "doingBusinessAs": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "The ledger.io"
                },
                "legalName": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "Lerian Studio Updated"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "parentOrganizationId": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "UpdatePortfolioInput": {
            "description": "UpdatePortfolioInput is the input payload to update a portfolio.",
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "My Portfolio Updated"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "UpdateProductInput": {
            "description": "UpdateProductInput is the input payload to update a product.",
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "My Product Updated"
                },
                "status": {
                    "$ref": "#/definitions/Status"
                }
            }
        }
    }
}