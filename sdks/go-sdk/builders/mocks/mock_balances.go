// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/LerianStudio/midaz/sdks/go-sdk/builders (interfaces: BalanceClientInterface,BalanceUpdateBuilder)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	builders "github.com/LerianStudio/midaz/sdks/go-sdk/builders"
	models "github.com/LerianStudio/midaz/sdks/go-sdk/models"
	gomock "github.com/golang/mock/gomock"
)

// MockBalanceClientInterface is a mock of BalanceClientInterface interface.
type MockBalanceClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceClientInterfaceMockRecorder
}

// MockBalanceClientInterfaceMockRecorder is the mock recorder for MockBalanceClientInterface.
type MockBalanceClientInterfaceMockRecorder struct {
	mock *MockBalanceClientInterface
}

// NewMockBalanceClientInterface creates a new mock instance.
func NewMockBalanceClientInterface(ctrl *gomock.Controller) *MockBalanceClientInterface {
	mock := &MockBalanceClientInterface{ctrl: ctrl}

	mock.recorder = &MockBalanceClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceClientInterface) EXPECT() *MockBalanceClientInterfaceMockRecorder {
	return m.recorder
}

// UpdateBalance mocks base method.
func (m *MockBalanceClientInterface) UpdateBalance(arg0 context.Context, arg1, arg2, arg3 string, arg4 *models.UpdateBalanceInput) (*models.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateBalance", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*models.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateBalance indicates an expected call of UpdateBalance.
func (mr *MockBalanceClientInterfaceMockRecorder) UpdateBalance(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBalance", reflect.TypeOf((*MockBalanceClientInterface)(nil).UpdateBalance), arg0, arg1, arg2, arg3, arg4)
}

// MockBalanceUpdateBuilder is a mock of BalanceUpdateBuilder interface.
type MockBalanceUpdateBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceUpdateBuilderMockRecorder
}

// MockBalanceUpdateBuilderMockRecorder is the mock recorder for MockBalanceUpdateBuilder.
type MockBalanceUpdateBuilderMockRecorder struct {
	mock *MockBalanceUpdateBuilder
}

// NewMockBalanceUpdateBuilder creates a new mock instance.
func NewMockBalanceUpdateBuilder(ctrl *gomock.Controller) *MockBalanceUpdateBuilder {
	mock := &MockBalanceUpdateBuilder{ctrl: ctrl}

	mock.recorder = &MockBalanceUpdateBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceUpdateBuilder) EXPECT() *MockBalanceUpdateBuilderMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockBalanceUpdateBuilder) Update(arg0 context.Context) (*models.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(*models.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockBalanceUpdateBuilderMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockBalanceUpdateBuilder)(nil).Update), arg0)
}

// WithAllowReceiving mocks base method.
func (m *MockBalanceUpdateBuilder) WithAllowReceiving(arg0 bool) builders.BalanceUpdateBuilder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithAllowReceiving", arg0)
	ret0, _ := ret[0].(builders.BalanceUpdateBuilder)
	return ret0
}

// WithAllowReceiving indicates an expected call of WithAllowReceiving.
func (mr *MockBalanceUpdateBuilderMockRecorder) WithAllowReceiving(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithAllowReceiving", reflect.TypeOf((*MockBalanceUpdateBuilder)(nil).WithAllowReceiving), arg0)
}

// WithAllowSending mocks base method.
func (m *MockBalanceUpdateBuilder) WithAllowSending(arg0 bool) builders.BalanceUpdateBuilder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithAllowSending", arg0)
	ret0, _ := ret[0].(builders.BalanceUpdateBuilder)
	return ret0
}

// WithAllowSending indicates an expected call of WithAllowSending.
func (mr *MockBalanceUpdateBuilderMockRecorder) WithAllowSending(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithAllowSending", reflect.TypeOf((*MockBalanceUpdateBuilder)(nil).WithAllowSending), arg0)
}
